plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id("com.palantir.docker") version "0.36.0"
}
ext{
    axonVersion = "4.9.2"
}

dependencyManagement {
    imports {
        mavenBom "org.axonframework:axon-bom:${axonVersion}"
    }
}

allprojects {
    configurations.all {
        resolutionStrategy {
            force 'com.google.protobuf:protobuf-java:3.21.12'
        }
    }
}
group = 'com.payment.money'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'
    runtimeOnly("mysql:mysql-connector-java:8.0.33")
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation project(path: ':common')
    implementation 'org.apache.kafka:kafka-clients:3.5.1'

    implementation 'org.axonframework:axon-spring-boot-starter'  // BOM이 버전 통일
    implementation 'io.axoniq:axonserver-connector-java'
}

tasks.named('test') {
    useJUnitPlatform()
}

docker {
    println(tasks.bootJar.outputs.files)
    name rootProject.name + '-' + project.name + ":" + version
    dockerfile file('../Dockerfile')
    files tasks.bootJar.outputs.files
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}